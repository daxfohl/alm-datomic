[
  {:db/id #db/id[:db.part/db]
  :db/ident :catalog/name
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db/doc "Catalog Name"
  :db.install/_attribute :db.part/db}

  {:db/id #db/id[:db.part/db]
  :db/ident :catalog/fields
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "Catalog Fields"
  :db.install/_attribute :db.part/db}

  {:db/id #db/id[:db.part/db]
  :db/ident :part/catalog
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc "A Part's Catalog"
  :db.install/_attribute :db.part/db}

  {:db/id #db/id [:db.part/user]
   :db/ident :assertWithRetracts
   :db/fn #db/fn 
     {:lang "clojure"
      :params [db e a vs]
      :code "(vals (into (into {} (map (comp #(vector % [:db/retract e a %]) first)
                                  (datomic.api/q [:find '?v :where [e a '?v]] db)))
                         (into {} (map #(vector % [:db/add e a %]) vs))))"}}
]